name: CI Back-end

on:
  push:  # Vai executar quando tiver um push
    branches:
      #- '**' # vai fazer em todas  // Delimitando onde ele vai rodar
      #- '!main' # Todas que não estão na main
      - 'main'
    paths:
      - 'back-end/**'
  pull_requests: # E também quando tiver um pull_requests
    paths:
      - 'back-end/**'
  
# Modificar workflow para que o job que compila o projeto do back-end, realiza os testes e cria o arquivo JAR, seja dividido em dois jobs, sendo um para teste e outro para criar o arquivo JAR.
jobs:
  test: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'
      - name: Compilaçao / Test
        working-directory: back-end/
        run: mvn --activate-profiles prod test


  package:
    needs: test  # Esse job depende do test, Vai aguarda o primeiro job terminar aí depois executa esse job package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'
      - name: Package
        working-directory: back-end/
        run: mvn --activate-profiles prod -DskipTests package
